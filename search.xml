<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【概率论与数理统计】多方法在次序统计量分布中的应用综述</title>
      <link href="/2025/01/20/%E3%80%90%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E3%80%91%E5%A4%9A%E6%96%B9%E6%B3%95%E5%9C%A8%E6%AC%A1%E5%BA%8F%E7%BB%9F%E8%AE%A1%E9%87%8F%E5%88%86%E5%B8%83%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%E7%BB%BC%E8%BF%B0/"/>
      <url>/2025/01/20/%E3%80%90%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E3%80%91%E5%A4%9A%E6%96%B9%E6%B3%95%E5%9C%A8%E6%AC%A1%E5%BA%8F%E7%BB%9F%E8%AE%A1%E9%87%8F%E5%88%86%E5%B8%83%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%E7%BB%BC%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么做这个综述？"><a href="#为什么做这个综述？" class="headerlink" title="为什么做这个综述？"></a>为什么做这个综述？</h1><p>在我学习【概率论与数理统计】这门课的时候，一个环节是对均匀分布参数矩估计与最大似然估计之间的有效性比较，而后者则涉及了均匀分布次序统计量的均值、方差。一些文献所提出的关于均匀分布次序统计量的一些性质为计算参数估计量的方差提供了基础，他们直接给出了在均匀分布条件下单个次序统计量的概率密度函数，但没有提供直接的证明过程。</p><p>我发现目前关于均匀分布次序统计量的概率密度函数推导并不少，于是我开始幻想能不能将分布一般化。</p><p>我查阅了大量的资料得到了本文，主要焦点集中在推导次序统计量的概率密度函数。首先，回顾连续型随机变量中基于累积分布函数推导单个次序统计量分布的基本方法，阐述该方法与利用离散化处理作概率重构方法的等效性；此外，还将阐述如何结合概率微元的方法达成同样的目的，并为其在后文的延伸打下基础。接着，本文将探讨离散型随机变量情况下的次序统计量分布与连续型随机变量推导过程中的根本差异，并对其中的一些问题作讨论。</p><p>另外，本文还将对进一步扩展到多个次序统计量的分布推导作综述。通过以两个次序统计量为基础，逐步推导多个次序统计量的联合概率密度函数，这一推导过程扩展了单个次序统计量分布的推导方法。</p><p><strong>注：</strong> 需要说明的是，本文是对次序统计量分布推导方法的综述与复现，并非原创性的内容产出。</p><p>相关符号说明</p><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>$X_1, X_2, \dots, X_n$</td><td>来自总体的 $n$ 个样本</td></tr><tr><td>$X_{(1)}, X_{(2)}, \dots, X_{(n)}$</td><td>$n$ 个样本中从小到大排序的次序统计量</td></tr><tr><td>$F(x)$</td><td>总体的累积分布函数</td></tr><tr><td>$f(x)$</td><td>总体的概率密度函数（连续型随机变量）</td></tr></tbody></table><h1 id="单个次序统计量的概率密度函数"><a href="#单个次序统计量的概率密度函数" class="headerlink" title="单个次序统计量的概率密度函数"></a>单个次序统计量的概率密度函数</h1><h2 id="基于累积分布函数的推导"><a href="#基于累积分布函数的推导" class="headerlink" title="基于累积分布函数的推导"></a>基于累积分布函数的推导</h2><p>由随机变量累积分布函数的定义可知：</p><p>$$ F_{X_{(k)}}(x) = P(X_{(k)} \le x) $$</p><p>由于 $ X_{(1)} \le X_{(2)} \le \dots \le X_{(n)} $，因此 $ X_{(k)} \le x $ 要求至少有 $ k $ 个样本值小于 $ x $。记 $ P = F(x) $，则有：</p><p>$$ F_{X_{(k)}}(x) = P(X_{(k)} \le x) = \sum_{i = k}^n \binom{n}{i} P^i (1 - P)^{n-i} $$</p><p>为进一步推导，需要证明下述等式：</p><p>$$ \sum_{i = k}^n \binom{n}{i} P^i (1 - P)^{n-i} = k \binom{n}{k} \int_{0}^P x^{k-1} (1 - x)^{n-k} , dx $$</p><p><strong>证明：</strong></p><p>对于右式有：</p><p>$$ \frac{d}{d P} \left[ k \binom{n}{k} \int_{0}^P x^{k-1} (1 - x)^{n-k} , dx \right] = k \binom{n}{k} P^{k-1} (1 - P)^{n-k} $$</p><p>对于左式有：</p><p>$$<br>\begin{aligned}<br>\frac{d}{d P} \left[ \sum_{i=k}^n \binom{n}{i} P^i (1 - P)^{n-i} \right] =<br>    \sum_{i=k}^n \binom{n}{i} \left[ i P^{i-1} (1 - P)^{n-i} - (n - i) P^i (1 - P)^{n-i-1} \right]<br>= k \binom{n}{k} P^{k-1} (1 - P)^{n-k} - (n - k) \binom{n}{k} P^k (1 - P)^{n-k-1} </p><ul><li>(k + 1) \binom{n}{k+1} P^{k} (1 - P)^{n-k-1} - (n - k - 1) \binom{n}{k+1} P^{k+1} (1 - P)^{n-k-2} </li><li>\dots + (n - 1) \binom{n}{n-1} P^{n-2} (1 - P)^1 - \binom{n}{n-1} P^{n-1} (1 - P)^0 </li><li>n \binom{n}{n} P^{n-1} (1 - P)^0 - 0<br>\end{aligned}<br>$$</li></ul><p>而</p><p>$$<br>\begin{aligned}<br>(n - i) \binom{n}{i} = (n - i) \frac{n!}{i! (n - i)!} = \frac{n!}{i! (n - i - 1)!}<br>(i + 1) \binom{n}{i+1} = (i + 1) \frac{n!}{(i + 1)! (n - i - 1)!} = \frac{n!}{i! (n - i - 1)!}<br>\end{aligned}<br>$$</p><p>因此：</p><p>$$ (n - i) \binom{n}{i} = (i + 1) \binom{n}{i+1} $$</p><p>所以左式求导得到可相消的式子，进而有：</p><p>$$ \frac{d}{d P} \left[ \sum_{i=k}^n \binom{n}{i} P^i (1 - P)^{n-i} \right] = k \binom{n}{k} P^{k-1} (1 - P)^{n-k} $$</p><p>所以：</p><p>$$<br>\begin{aligned}<br>\frac{d}{d P} \left[ k \binom{n}{k} \int_{0}^P x^{k-1} (1 - x)^{n-k} , dx \right] =<br>    \frac{d}{d P} \left[ \sum_{i=k}^n \binom{n}{i} P^i (1 - P)^{n-i} \right]<br>\therefore k \binom{n}{k} \int_{0}^P x^{k-1} (1 - x)^{n-k} , dx = \sum_{i=k}^n \binom{n}{i} P^i (1 - P)^{n-i} + C \text{（C为与P无关的“常”数）}<br>\xrightarrow{P=0} C = 0<br>\end{aligned}<br>$$</p><p>故等式得证。</p><p>因此：</p><p>$$ F_{X_{(k)}}(x) = P(X_{(k)} \le x) = \sum_{i = k}^n \binom{n}{i} P^i (1 - P)^{n-i} = k \binom{n}{k} \int_{0}^P x^{k-1} (1 - x)^{n-k} , dx $$</p><p>求导得到 $ X_{(k)} $ 的概率密度函数为：</p><p>$$ f_{X_{(k)}}(x) = k \binom{n}{k} [F(x)]^{k-1} [1 - F(x)]^{n-k} f(x) $$</p><h3 id="从离散化与概率重构角度思考此方法"><a href="#从离散化与概率重构角度思考此方法" class="headerlink" title="从离散化与概率重构角度思考此方法"></a>从离散化与概率重构角度思考此方法</h3><p>令随机变量 $Y$ 表示随机样本中样本值小于等于 $x$ 的个数，那么单个次序统计量的概率分布可以表达为：</p><p>$$ P(X_{(k)} \le x) = P(Y \ge k) $$</p><p>这是一个相当朴素的思想，其后续的推导步骤与基于分布函数的推导过程实质上毫无差异。若将两者视为独立推导方法，则它们在本质上是完全等价的。然而，这一基础思想深刻揭示了后者的内在本质，即通过分布函数的定义，巧妙结合次序统计量所具有的有限性特征，成功将一个连续型随机变量的分布函数离散化处理。在此基础上，我们得以将概率重新构建为求和的形式，而非传统的积分或代入求导方式。这一转变在某种程度上为后续进行变量变换与消元提供了坚实的理论支撑。</p><p>在后续对两个次序统计量联合概率密度的推导综述中，若直接从联合分布函数出发，问题可能会显得异常复杂且难以处理。然而，上述这一基础性的本质思想却为我们提供了解决该难题的有效途径。</p><h2 id="利用概率微元的推导"><a href="#利用概率微元的推导" class="headerlink" title="利用概率微元的推导"></a>利用概率微元的推导</h2><p>教材在证明连续型随机变量在某值处的概率为 0 时，采用了概率微元的概念，即：</p><p>$$ P(x \le X \le x + \Delta x) = f(x) \Delta x $$</p><p>这里将概率微元写为：</p><p>$$ P(x \le X \le x + dx) = f(x) dx + o(dx) $$</p><p>有：</p><p>$$ f_{X_{(k)}}(x) = \lim_{\Delta x \to 0} \frac{P(x \le X_{(k)} \le x + \Delta x) + o(\Delta x)}{\Delta x} = \lim_{\Delta x \to 0} \frac{P(x \le X_{(k)} \le x + \Delta x)}{\Delta x} $$</p><p>由于总体为连续型随机变量，可以将整个一维数轴不重不漏地划分为 $ (-\infty, x) $, $ [x, x + \Delta x) $, $ [x + \Delta x, +\infty) $ 三部分，且 $ \Delta x \to 0 $ 时，几乎一定可以使 $ [x, x + \Delta x) $ 只包含一个样本点。</p><p>在上述基础上，$ x \le X_{(k)} \le x + \Delta x $ 等价于有 $ k - 1 $ 个样本点的值小于 $ x $，有且仅有 1 个样本的值在 $ [x, x + \Delta x) $ 中，其余 $ n - k $ 个样本点的值大于等于 $ x + \Delta x $，因此有：</p><p>$$<br>\begin{aligned}<br> P(x \le X_{(k)} \le x + \Delta x)<br>=  \binom{n}{k-1} [F(x)]^{k-1} \binom{n - k + 1}{1} \left[ F(x + \Delta x) - F(x) \right] \binom{n - k}{n - k} [1 - F(x + \Delta x)]^{n - k}<br>=  \frac{n!}{(k - 1)! (n - k + 1)!} \cdot \frac{(n - k + 1)!}{1! (n - k)!} \cdot 1 \cdot [F(x)]^{k-1} \left[ F(x + \Delta x) - F(x) \right] [1 - F(x + \Delta x)]^{n - k}<br>=  k \binom{n}{k} [F(x)]^{k-1} \left[ F(x + \Delta x) - F(x) \right] [1 - F(x + \Delta x)]^{n - k}<br>\end{aligned}<br>$$</p><p>$$<br>\begin{aligned}<br>\therefore f_{X_{(k)}}(x) = k \binom{n}{k} \lim_{\Delta x \to 0} \frac{F(x + \Delta x) - F(x)}{\Delta x} [F(x)]^{k-1} [1 - F(x + \Delta x)]^{n - k}<br>= k \binom{n}{k} f(x) [F(x)]^{k-1} [1 - F(x)]^{n - k}<br>\end{aligned}<br>$$</p><h2 id="连续型与离散型随机变量在次序统计量分布推导中的区别"><a href="#连续型与离散型随机变量在次序统计量分布推导中的区别" class="headerlink" title="连续型与离散型随机变量在次序统计量分布推导中的区别"></a>连续型与离散型随机变量在次序统计量分布推导中的区别</h2><p>在连续型随机变量中，单个次序统计量分布的推导可以通过概率微元的方法极大地简化。该方法基于连续型随机变量的特性，即能够将整个一维数轴不重不漏地划分为三个区间：$(-\infty, x)$、$[x, x + \Delta x)$ 和 $[x + \Delta x, +\infty)$，并且当 $\Delta x \to 0$ 时，$[x, x + \Delta x)$ 区间几乎一定只包含一个样本点。</p><p>然而，在离散型随机变量中，数轴被划分为 $(-\infty, x)$、${x}$ 和 $(x, +\infty)$（这里没有 $\Delta x$ 或 $dx$ 的概念）。由于离散型随机变量的值可能重复，多个样本点的值可能均为 $x$，这导致需要考虑多种情况，使得问题变得复杂。因此，模仿连续型随机变量对 $\mathbb{R}$ 进行划分的方法在离散型随机变量中失效。这是连续型随机变量与离散型随机变量在单个次序统计量分布推导上的根本区别。</p><p>尽管如此，基于分布函数定义的思想仍然是正确的。</p><h3 id="离散型随机变量值的可重复性"><a href="#离散型随机变量值的可重复性" class="headerlink" title="离散型随机变量值的可重复性"></a>离散型随机变量值的可重复性</h3><p>离散型随机变量值是具有可重复性的：</p><p>以 $X_{(k)} \le x$ 为例，该事件等价于至少有 $k$ 个样本点的值小于等于 $x$。因此，单个次序统计量的分布函数可以表示为各种情况的概率之和。关键在于，除去小于等于 $x$ 的点，其他点的概率值应取大于 $x$，还是大于等于 $x$？</p><ul><li><strong>若取大于$x$</strong>：这与离散型随机变量值的可重复性存在矛盾。如图 1 所示，当计算到有 $k$ 个样本小于等于 $x$ 时，按照这种算法，会导致 $ X_{(k+1)} = X_{(k+2)} = x $ 的情况被忽略。</li><li><strong>若取大于等于$x$</strong>：则每种情况的概率之和可能超过 1，而非二项分布的形式，其合理性有待讨论。</li></ul><p>Wiki 对该问题采取了后者的策略，但我认为这个问题仍有待讨论，因此这里不再作推导，以免违背严谨性。</p><h1 id="多个次序统计量的联合概率分布"><a href="#多个次序统计量的联合概率分布" class="headerlink" title="多个次序统计量的联合概率分布"></a>多个次序统计量的联合概率分布</h1><h2 id="延展概率微元方法做推导"><a href="#延展概率微元方法做推导" class="headerlink" title="延展概率微元方法做推导"></a>延展概率微元方法做推导</h2><p>以两个次序统计量 $X_{(i)}, X_{(j)}$ 为例。$F_{X_{(i)}, X_{(j)}}(x, y) = P(X_{(i)} \leq x, X_{(j)} \leq y) (i &lt; j)$，规定 $ x &lt; y $，否则 $F_{X_{(i)}, X_{(j)}}(x, y) = P(X_{(j)} \leq y) = F_{X_{(j)}}(y)$。</p><p>延展单个次序统计量概率微元的推导，这里将 $\mathbb{R}$ 不重不漏地划分为 $(-\infty, x), [x, x + \Delta x), [x + \Delta x, y), [y, y + \Delta y), [y + \Delta y, \infty)$。同样地，连续型随机变量能做到当 $(\Delta x, \Delta y) \to (0, 0)$ 时，$[x, x + \Delta x), [y, y + \Delta y)$ 中均仅有一个样本点。则 $x \leq X_{(i)} \leq x + \Delta x, y \leq X_{(j)} \leq y + \Delta y$ 等价于有 $i-1$ 个样本小于 $x$，有 1 个在 $[x, x + \Delta x)$ 中，有 $j-1-i$ 个在 $[x + \Delta x, y)$ 中，有 1 个在 $[y, y + \Delta y)$ 中，有 $n-j$ 样本大于 $ y $.</p><p>于是<br>$$<br>\begin{aligned}<br> P(x \leq X_{(i)} \leq x + \Delta x, y \leq X_{(j)} \leq y + \Delta y)<br>= {n \choose {i-1}} [F(x)]^{i-1} {n-i+1 \choose 1} [F(x + \Delta x) - F(x)] {n-i \choose j-i-1} [F(y) - F(x + \Delta x)]^{j-i+1}<br> {n-j+1 \choose 1} [F(y + \Delta y) - F(y)] {n-j \choose {n-j}} [1 - F(y + \Delta y)]^{n-j}<br>= \frac{n!}{(i-1)!(n-i+1)!}(n-i+1) \frac{(n-i)!}{(j-i-1)!(n-j+1)!}(n-j+1) \cdot 1 \cdot [F(x)]^{i-1}<br> [F(x + \Delta x) - F(x)] [F(y) - F(x + \Delta x)]^{j-i+1} [F(y + \Delta y) - F(y)] [1 - F(y + \Delta y)]^{n-j}<br>\overset{\bigtriangleup}{=} \frac{n!}{(i-1)!(j-i-1)!(n-j)!} g(x)<br>\end{aligned}<br>$$</p><p>根据概率微元的概念，有<br>$$<br>\begin{aligned}<br> f_{X_{(i)}, X_{(j)}}(x, y) = \lim_{(\Delta x, \Delta y) \to (0, 0)} P(x \leq X_{(i)} \leq x + \Delta x, y \leq X_{(j)} \leq y + \Delta y)<br>= \frac{n!}{(i-1)!(j-i-1)!(n-j)!} [F(x)]^{i-1} [F(y) - F(x)]^{j-i+1} [1 - F(y)]^{n-j} f(x) f(y)<br>\end{aligned}<br>$$</p><p>可以看到，概率微元在连续型随机变量次序统计量的讨论中有着十分重要的作用。基于这个概念，可以将两个次序统计量拓展到 $\forall r, 1 &lt; r \leq n$ 个次序统计量中。一些常见的结论如下：</p><ul><li><p>记任意 $s \in [1, n]$ 个次序统计量 $Y_i \overset{\bigtriangleup}{=} X_{(r_i)} (i=1, 2, …, s, r_1 &lt; r_2 &lt; … &lt; r_s)$ 的联合概率密度函数为<br>$$<br>f_Y(y_1, y_2, …, y_s) = n! \prod_{j=0}^s \frac{[F(y_{j+1}) - F(y_j)]^{r_{j+1} - r_j - 1}}{(r_{j+1} - r_j - 1)!} \prod_{j=1}^s f(y_j)<br>$$<br>其中 $r_0 = 0, r_{s+1} = n + 1, y_0 = -\infty, y_{n+1} = \infty, y_1 &lt; y_2 &lt; … &lt; y_s$。</p></li><li><p>特别地，前 $r$ 个次序统计量的联合概率密度函数为<br>$$<br>g(y_1, y_2, …, y_r) = \frac{n!}{(n-r)!} [1 - F(y_r)]^{n-r} \prod_{i=1}^r f(y_i)<br>$$</p></li></ul><h2 id="延展离散化与概率重构方法做推导"><a href="#延展离散化与概率重构方法做推导" class="headerlink" title="延展离散化与概率重构方法做推导"></a>延展离散化与概率重构方法做推导</h2><p>2.1 中阐明了一个朴素的离散化思想，在两个次序统计量中对该思想做延展。</p><p>记 $U, V$ 分别为样本中样本值小于等于 $x$、大于 $x$ 小于等于 $y$ 的个数，则</p><p>$$<br>F_{X_{(i)}, X_{(j)}}(x, y) = P(U \geq i, U + V \geq j) (x &lt; y)<br>$$</p><p>该转化完成了离散化的过程，$U, V$ 是离散的，概率被重构为</p><p>$$<br>\sum_a \sum_b P(U = a, V = b)<br>$$</p><p>显然 $i \leq a \leq j, j \leq a + b \leq n$，注意这里不涉及对 $\mathbb{R}$ 进行划分，$a \leq j$ 是可取等的，故</p><p>$$<br>P(U = a, V = b) = \sum_{a=i}^j \sum_{b=j-a}^{n-a} P(U = a, V = b)<br>$$</p><p>视每取一次样本 $X_i$ 为一个事件，则该事件只可能存在三种结果：</p><ul><li>$X_i \leq x$</li><li>$x &lt; X_i \leq y$</li><li>$y &lt; X_i \leq n$</li></ul><p>因此 $(U, V, n - U - V)$ 服从一个三项分布，则</p><p>$$<br>P(U = x_1, V = x_2, n - U - V = n - x_1 - x_2) = \frac{n!}{x_1! x_2! (n - x_1 - x_2)!} [F(x)]^{x_1} [F(y) - F(x)]^{x_2} [1 - F(y)]^{n - x_1 - x_2}<br>$$</p><p>则</p><p>$$<br>F_{X_{(i)}, X_{(j)}}(x, y) = \sum_{a=i}^j \sum_{b=j-a}^{n-a} \frac{n!}{a! b! (n - a - b)!} [F(x)]^{a} [F(y) - F(x)]^{b} [1 - F(y)]^{n - a - b}<br>$$</p><p>因此，记 $[F(x)]^{a} [F(y) - F(x)]^{b} [1 - F(y)]^{c} f(x) f(y) \overset{\Delta}{=} D(a, b, c)$，则有</p><p>$$<br>f_{X_{(i)}, X_{(j)}}(x, y) = \frac{\partial^2 F}{\partial x \partial y}<br>= \sum_{a=i}^j \sum_{b=j-a}^{n-a} \frac{n!}{a! b! (n - a - b)!} {<br>  ab \cdot D(a-1, b-1, n-a-b) </p><ul><li>a(n - a - b) \cdot D(a-1, b, n-a-b-1) </li><li>b(b-1) \cdot D(a, b-2, n-a-b) </li></ul><ul><li>(n - a - b)b \cdot D(a, b-1, n-a-b-1)<br>}<br>$$</li></ul><h3 id="先讨论求和内部"><a href="#先讨论求和内部" class="headerlink" title="先讨论求和内部"></a>先讨论求和内部</h3><p>分为 $b = j - a, b \geq j - a$ 两部分，再记 $\frac{n!}{a! b! (n - a - b)!} \overset{\Delta}{=} Q(a, b)$，从 第一个式子 可得到</p><p>$$<br>Q(a, j - a) a (j - a) \cdot D(a-1, b-1, n-a-b) + \sum_{b=j-a+1}^{n-a} Q(a, b) ab \cdot D(a-1, b-1, n-a-b)<br>$$</p><p>从 第三个式子 可得到</p><p>$$</p><ul><li>Q(a, j - a) (j - a)(j - a - 1) \cdot D(a, b-2, n-a-b) </li><li>\sum_{b=j-a+1}^{n-a} Q(a, b) b(b-1) \cdot D(a, b-2, n-a-b)<br>$$</li></ul><p>对上面两个式子的求和式做变量替换 $b’ = b - 1$，则两个求和式变为</p><p>$$</p><ul><li>\sum_{b’=j-a}^{n-a-1} Q(a, b’+1) a(b’+1) \cdot D(a-1, b’, n-a-b’-1) </li></ul><ul><li>\sum_{b’=j-a}^{n-a-1} Q(a, b’+1) b’(b’+1) \cdot D(a, b’-1, n-a-b’-1)<br>$$</li></ul><p>在第二个式子和第四个式子中，当 $b = n - a$ 时式子为 0，上限修改为 $n - a - 1$，即</p><p>$$</p><ul><li>\sum_{b=j-a}^{n-a-1} Q(a, b) (n - a - b) b \cdot D(a, b-1, n-a-b-1) </li></ul><ul><li>\sum_{b=j-a}^{n-a-1} Q(a, b) a (n - a - b) \cdot D(a-1, b, n-a-b-1)<br>$$</li></ul><p>又因为</p><p>$$<br>Q(a, b+1) a(b+1) = \frac{n!}{a! (b+1)! (n - a - b - 1)!} a(b+1) = \frac{n!}{(a-1)! b! (n - a - b - 1)!} = Q(a, b) a(n - a - b)<br>$$</p><p>同理有</p><p>$$<br>Q(a, b+1) b(b+1) = Q(a, b) b(n - a - b)<br>$$</p><p>因此，通过相消，故</p><p>$$<br>f_{X_{(i)}, X_{(j)}}(x, y) = \sum_{a=i}^j [Q(a, j-a) a(j-a) \cdot D(a-1, b-1, n-a-b) </p><ul><li>Q(a, j-a) (j-a)(j-a-1) \cdot D(a, b-2, n-a-b)]<br>$$</li></ul><p>同理地，分为 $a = i, a &gt; i$ 两部分求和，并考虑取上限时为 0 的情况，得到</p><p>$$<br>f_{X_{(i)}, X_{(j)}}(x, y) = Q(i, j-i) i(j-i) \cdot D(i-1, j-i-1, n-j) </p><ul><li>\sum_{a=i+1}^{j-1} Q(a, j-a) a(j-a) \cdot D(a-1, j-a-1, n-j) </li></ul><ul><li>\sum_{a=i}^{j-2} Q(a, j-a) (j-a)(j-a-1) \cdot D(a, j-a-2, n-j)<br>$$</li></ul><p>对后两项和式做变量替换 $a’ = a - 1$，同理可消去得到</p><p>$$<br>f_{X_{(i)}, X_{(j)}}(x, y) = Q(i, j-i) i(j-i) \cdot D(i-1, j-i-1, n-j)<br>$$</p><p>即</p><p>$$<br>f_{X_{(i)}, X_{(j)}}(x, y) = \frac{n!}{(i-1)! (j-i-1)! (n-j)!} [F(x)]^{i-1} [F(y) - F(x)]^{j-i+1} [1 - F(y)]^{n-j} f(x) f(y)<br>$$</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>山静似太古，日长如小年</title>
      <link href="/2025/01/06/%E5%B1%B1%E9%9D%99%E4%BC%BC%E5%A4%AA%E5%8F%A4%EF%BC%8C%E6%97%A5%E9%95%BF%E5%A6%82%E5%B0%8F%E5%B9%B4/"/>
      <url>/2025/01/06/%E5%B1%B1%E9%9D%99%E4%BC%BC%E5%A4%AA%E5%8F%A4%EF%BC%8C%E6%97%A5%E9%95%BF%E5%A6%82%E5%B0%8F%E5%B9%B4/</url>
      
        <content type="html"><![CDATA[<h2 id="我有亿点困惑"><a href="#我有亿点困惑" class="headerlink" title="我有亿点困惑"></a>我有亿点困惑</h2><p> 我尝试了许多，<del>问爆了我的 GPT ~</del> 看了许多 bug ，终于将这份 blog 送到你面前。坦白说这并不光彩，运用一个已有的<a href="https://hexo.io/">Hexo</a>框架来搭建 blog ，实属寻常之举，我却在这一过程中遇到<br> 奇多困难，这确实地反映了我技术栈储备的匮乏。</p><p> 一个令我颇为无奈的事实是，我迫不得已地将这份 blog 部署到了 <a href="https://github.com/Minijie3/Minijie3.github.io">GitHub</a> 中，因为尽管我的 ESC 云服务器一切部署工作都已完成，却始终无法正常访问，这让我倍感困扰，我甚至为此买了域名，然而在尝试将域名解析到 GitHub Pages 时，依旧遭遇了解析成功却无法访问的窘境。将 blog 部署到 GitHub 并无法使用我自己的域名，是我预想中最为糟糕的情况。此外，在我进行参数调试时，包括但不限于<code>link(friends),tags</code>等一系列页面甚至无法成功通过 <code>hexo generate</code> 命令，均无法正常生成静态文件，而我至今未能找出其中的原因。因此，我的页面显得相当简陋，此外此站目前暂时不支持移动端访问，甚至连我自己都难以说服自己接受这种状况。然而，鉴于个人时间安排的限制，为了不影响后续计划，我不得不暂时让其上线，这让我感到十分无奈。</p><p> 我会持续努力优化这个博客，尽力解决上述提到的一些问题。不过，我必须坦诚，我刚开始学习<code>JavaScript</code>相关技术，还不具备对框架进行深度修改的能力。因此，对于那些涉及到框架核心的 bug，我只能暂时放弃，或者从参数上找问题（毕竟如此成熟的框架有问题疑似不太可能），确保当前框架的正常运行。另外，关于 ESC 服务器的问题，虽然我有一定的 Linux 服务器操作能力，但目前仍然无法解决，而移动端访问的问题同时会花费我大量的时间。我不确定需要多长时间才能彻底改善所有存在的问题，或许是几个月、一年、两年？但我会尽力而为。</p><h2 id="加速访问此站"><a href="#加速访问此站" class="headerlink" title="加速访问此站"></a>加速访问此站</h2><p> 基于 GitHub 访问时好时坏、有时甚至无法访问的尿性，想要稳定、快速地访问此站需要一定的<del>“魔法”</del>努力。我推荐且常用的是<a href="https://steampp.net/">Watt Toolkit(俗称steam++)</a>加速器，本质上它是一个为 Steam 加速而设计的加速器，但它同样可以用于加速 GitHub 访问，我已经使用了这个工具半年多，其稳定性和访问速度我还算满意。此外，我无意中发现<a href="https://uu.163.com/index.html">UU加速器</a>中有对学术网页加速的功能，尽管其列表中没有明确提到 GitHub，但实际使用中却能对 GitHub 进行加速，只是效果不太稳定。当然，如果你有其他的“魔法”手段，那这些建议可能就显得多余了（）。</p><p> 后续如果我的 ESC 服务器能够正常部署，我将考虑把此博客迁移到我的服务器上，届时访问速度与移动端的访问问题都将得到解决（虽然我还不确定移动端无法访问是否完全是因为 GitHub Pages 的问题），但这需要一定的时间。令人遗憾的是，我曾尝试将此站点部署到 Gitee Pages 上，就在我即将完成部署、为即将能够秒速访问感到欣喜时，突然发现 Gitee Pages 服务早已下线（恼。而 GitLab Pages 又不支持 Hexo 框架。希望国产代码托管平台能早日开发出支持 Hexo 框架的 Pages 服务。</p><h2 id="关于本站"><a href="#关于本站" class="headerlink" title="关于本站"></a>关于本站</h2><p> 读者应该能看出来笔者技术的匮乏，但这与我愿意来写博客作分享无关，我接受一切批评与建议，<del>如果你非要说彩笔还写博客那what can i say</del>并且自身也在努力学习。本站预计分享以下内容：</p><ol><li><p>数学</p></li><li><p>学习过程的各种技术小记</p></li><li><p>计算机体系结构</p></li><li><p>else</p><p>尽管我对LaTeX的熟练程度还不错，但我从来没有使用过markdown，本文是我第一次使用markdown来码字，当然基于我 LaTeX 的基础，我认为我可以相对轻松地学习使用markdown。</p></li></ol><h2 id="关于笔者"><a href="#关于笔者" class="headerlink" title="关于笔者"></a>关于笔者</h2><p> from Harbin Institute of Technology, Shenzhen.</p><p> <a href="mailto:https://1208352126@qq.com">QQ邮箱</a>：1208352126@qq.com，还有一个HIT 邮箱：<a href="https://2023311H13@stu.hit.edu.cn:2023311H13.stu.hit.edu.cn，推荐你使用后者联系我，因为我QQ邮箱中消息实在杂乱，我会习惯性地将里面的邮件视为trash">https://2023311H13@stu.hit.edu.cn:2023311H13.stu.hit.edu.cn，推荐你使用后者联系我，因为我QQ邮箱中消息实在杂乱，我会习惯性地将里面的邮件视为trash</a> mails.</p><p> <a href="https://github.com/Minijie3">GitHub</a>:Minijie3，我会不定期写一些小玩具push上去。</p><h2 id="let’s-go"><a href="#let’s-go" class="headerlink" title="let’s go!"></a>let’s go!</h2><p> 尽管在这个博客搭建过程中遇到了诸多挑战，我依然充满热情地开始了这段旅程。正如题目所言，“山静似太古，日长如小年”，我情愿以耐心与毅力去应对每一次的挫败，作为一个极度享受孤独的人，这些是我成长的契机。我承认我是一个小白，但是我希望通过记录自己的学习过程，激励同样在技术道路上摸索前行的你。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
